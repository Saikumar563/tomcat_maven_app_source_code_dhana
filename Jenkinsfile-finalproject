pipeline{
    agent none
    environment{
        SONARQUBE_URL = ''
        SONARQUBE_LOGIN = credentials('sonar-login')

    }
    tools{

    }
    options{

    }
    stages{
        stage('Junit and Sonar'){
            agent {
                image 'maven:3-jdk-8'
                label 'dockernode'
            }
            steps {
                sh 'mvn settings settings.xml test verify surefire-report:report-only sonar:sonar -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONARQUBE_LOGIN'
            }
            post {
                success {
                    junit "target/surefire-reports/*.xml"
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site', reportFiles: 'surefire-report.html', reportName: 'SureFireReportHTML', reportTitles: ''])
                }
            }

        }

        stage('Read the POM'){
            agent {
                dockerfile {
                    filename 'Dockerfile-maven'
                    label 'dockernode'
                }
            }
            steps{
                script{
                    pom = readMavenPom file: 'pom.xml'
                    ARTIFACT_NAME = pom.artifactId.toString()
                }
            }
            stages{
                stage('Packaging'){
                    steps{
                        sh 'mvn clean install --settings settings.xml'
                    }
                }
                stage('Deploying'){
                    steps{
                        sh 'mvn deploy -DSkipTests=true --settings settings.xml'
                        stash includes: "target/{$ARTIFACT_NAME}.war", name: 'artifact'
                    }
                    post {
                        success {
                            echo "Package has been uploaded to Artifactory Successfully"
                        }
                    }
                }
            }
        }
    }
}
